Topics
Mem levels
float vs double in c/cpu/gpu
adding more error handeling and found propagate vs prop invalid name 46
build options
gcc vs icc vs amd auto vectorising
hi mem
amd // accelerator
conditionals
pinned mem/ 0gap
kernal defines 
acell for data locality
err off/assert
2d vs 1d
work group size

cookbook tips
references

Serial 

Box
Reynolds number:		2.039107350801E+01
Elapsed time:			103.511089 (s)
Elapsed user CPU time:		103.262301 (s)
Elapsed system CPU time:	0.001999 (s)Rect
==done==
Reynolds number:        3.740889367644E+01
Elapsed time:           212.421373 (s)
Elapsed user CPU time:      211.921782 (s)
Elapsed system CPU time:    0.002999 (s)

SP
Reynolds number:        2.889654348141E+01
Elapsed time:           13.154195 (s)
Elapsed user CPU time:      13.121005 (s)
Elapsed system CPU time:    0.003999 (s)

LP
Reynolds number:        8.531247814429E+00
Elapsed time:           533.982507 (s)
Elapsed user CPU time:      532.724013 (s)
Elapsed system CPU time:    0.023996 (s)

Fast
Reynolds number:        6.021422556968E+00
Elapsed time:           0.632081 (s)
Elapsed user CPU time:      0.628904 (s)
Elapsed system CPU time:    0.001999 (s)
==========================================

Replaced cell addresses in accell, prop and rebound and just increment in the second loop.

box -msse3 -ffast-math
Elapsed time:           63.609011 (s)
Elapsed user CPU time:      57.317286 (s)
Elapsed system CPU time:    0.680896 (s)

box C11 -msse3 -ffast-math
Elapsed time:           47.869443 (s)
Elapsed user CPU time:      48.145680 (s)
Elapsed system CPU time:    0.191970 (s)

box -march=native
Elapsed time:           104.553459 (s)   (Slower)
Elapsed user CPU time:      104.447121 (s)
Elapsed system CPU time:    0.466929 (s)

gcc -march=native -Q --help=target
The following options are target specific:
  -m128bit-long-double              [disabled]
  -m32                              [disabled]
  -m3dnow                           [disabled]
  -m3dnowa                          [disabled]
  -m64                              [enabled]
  -m80387                           [enabled]
  -m8bit-idiv                       [disabled]
  -m96bit-long-double               [enabled]
  -mabi=                            sysv
  -mabm                             [disabled]
  -maccumulate-outgoing-args        [disabled]
  -maddress-mode=                   short
  -madx                             [disabled]
  -maes                             [enabled]
  -malign-double                    [disabled]
  -malign-functions=                0
  -malign-jumps=                    0
  -malign-loops=                    0
  -malign-stringops                 [enabled]
  -mandroid                         [disabled]
  -march=                           corei7-avx
  -masm=                            att
  -mavx                             [enabled]
  -mavx2                            [disabled]
  -mavx256-split-unaligned-load     [disabled]
  -mavx256-split-unaligned-store    [disabled]
  -mbionic                          [disabled]
  -mbmi                             [disabled]
  -mbmi2                            [disabled]
  -mbranch-cost=                    0
  -mcld                             [disabled]
  -mcmodel=                         32
  -mcpu=                            
  -mcrc32                           [disabled]
  -mcx16                            [enabled]
  -mdispatch-scheduler              [disabled]
  -mf16c                            [disabled]
  -mfancy-math-387                  [enabled]
  -mfentry                          [enabled]
  -mfma                             [disabled]
  -mfma4                            [disabled]
  -mforce-drap                      [disabled]
  -mfp-ret-in-387                   [enabled]
  -mfpmath=                         387
  -mfsgsbase                        [disabled]
  -mfused-madd                      
  -mfxsr                            [enabled]
  -mglibc                           [enabled]
  -mhard-float                      [enabled]
  -mhle                             [disabled]
  -mieee-fp                         [enabled]
  -mincoming-stack-boundary=        0
  -minline-all-stringops            [disabled]
  -minline-stringops-dynamically    [disabled]
  -mintel-syntax                    
  -mlarge-data-threshold=           0x10000
  -mlong-double-64                  [disabled]
  -mlong-double-80                  [enabled]
  -mlwp                             [disabled]
  -mlzcnt                           [disabled]
  -mmmx                             [disabled]
  -mmovbe                           [disabled]
  -mms-bitfields                    [disabled]
  -mno-align-stringops              [disabled]
  -mno-fancy-math-387               [disabled]
  -mno-push-args                    [disabled]
  -mno-red-zone                     [disabled]
  -mno-sse4                         [disabled]
  -momit-leaf-frame-pointer         [disabled]
  -mpc32                            [disabled]
  -mpc64                            [disabled]
  -mpc80                            [disabled]
  -mpclmul                          [enabled]
  -mpopcnt                          [enabled]
  -mprefer-avx128                   [disabled]
  -mpreferred-stack-boundary=       0
  -mprfchw                          [disabled]
  -mpush-args                       [enabled]
  -mrdrnd                           [disabled]
  -mrdseed                          [disabled]
  -mrecip                           [disabled]
  -mrecip=                          
  -mred-zone                        [enabled]
  -mregparm=                        0
  -mrtd                             [disabled]
  -mrtm                             [disabled]
  -msahf                            [enabled]
  -msoft-float                      [disabled]
  -msse                             [enabled]
  -msse2                            [enabled]
  -msse2avx                         [disabled]
  -msse3                            [enabled]
  -msse4                            [enabled]
  -msse4.1                          [enabled]
  -msse4.2                          [enabled]
  -msse4a                           [disabled]
  -msse5                            
  -msseregparm                      [disabled]
  -mssse3                           [enabled]
  -mstack-arg-probe                 [disabled]
  -mstackrealign                    [enabled]
  -mstringop-strategy=              [default]
  -mtbm                             [disabled]
  -mtls-dialect=                    gnu
  -mtls-direct-seg-refs             [enabled]
  -mtune=                           corei7-avx
  -muclibc                          [disabled]
  -mveclibabi=                      [default]
  -mvect8-ret-in-mem                [disabled]
  -mvzeroupper                      [disabled]
  -mx32                             [disabled]
  -mxop                             [disabled]
  -mxsave                           [enabled]
  -mxsaveopt                        [enabled]

  Known assembler dialects (for use with the -masm-dialect= option):
    att intel

  Known ABIs (for use with the -mabi= option):
    ms sysv

  Known code models (for use with the -mcmodel= option):
    32 kernel large medium small

  Valid arguments to -mfpmath=:
    387 387+sse 387,sse both sse sse+387 sse,387

  Known vectorization library ABIs (for use with the -mveclibabi= option):
    acml svml

  Known address mode (for use with the -maddress-mode= option):
    long short

  Valid arguments to -mstringop-strategy=:
    byte_loop libcall loop rep_4byte rep_8byte rep_byte unrolled_loop

  Known TLS dialects (for use with the -mtls-dialect= option):
    gnu gnu2

=====================================================

box double to floats ( without kernals) (Slower)
Elapsed time:           80.997894 (s)
Elapsed user CPU time:      80.814714 (s)
Elapsed system CPU time:    0.343947 (s)

box without fastmath
Elapsed time:           104.024735 (s)
Elapsed user CPU time:      104.001189 (s)
Elapsed system CPU time:    0.072988 (s)

box fused (Rebound+Collision)
Elapsed time:           47.110718 (s)
Elapsed user CPU time:      47.539772 (s)
Elapsed system CPU time:    0.096985 (s)

Added constants to collision
=====================================================
box icc O3
Elapsed time:           106.139727 (s)
Elapsed user CPU time:      106.526805 (s)
Elapsed system CPU time:    0.042993 (s)

box icc O3 xHOST
Elapsed time:           108.224131 (s)
Elapsed user CPU time:      108.257542 (s)
Elapsed system CPU time:    0.041993 (s)

icc -O3 -guide  -o simulation.o -c simulation.c
GAP REPORT LOG OPENED ON Tue Nov 10 18:41:35 2015

remark #30761: Add -parallel option if you want the compiler to generate recommendations for improving auto-parallelization.

lbm.h(17): remark #30758: (DTRANS) Remove unused field(s) 'max_iters, reynolds_dim' from the struct 'param_t'. [VERIFY] The suggestion is based on the field references in the current compilation. Please make sure that there are no references to these fields across the entire application.

simulation.c(34): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 34 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: cells. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

simulation.c(34): remark #30525: (PAR) Insert a "#pragma loop count min(256)" statement right before the loop at line 34 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 256 iterations.
simulation.c(60): remark #30525: (PAR) Insert a "#pragma loop count min(256)" statement right before the loop at line 60 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 256 iterations.
simulation.c(87): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 87 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: tmp_cells, cells. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

simulation.c(121): remark #30519: (PAR) Insert a "#pragma parallel" statement right before the loop at line 121 to parallelize the loop. [VERIFY] Make sure that these arrays in the loop do not have cross-iteration dependencies: cells, tmp_cells. A cross-iteration dependency exists if a memory location is modified in an iteration of the loop and accessed (by a read or a write) in another iteration of the loop.

simulation.c(121): remark #30525: (PAR) Insert a "#pragma loop count min(32)" statement right before the loop at line 121 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 32 iterations.
simulation.c(284): remark #30525: (PAR) Insert a "#pragma loop count min(512)" statement right before the loop at line 284 to parallelize the loop. [VERIFY] Make sure that the loop has a minimum of 512 iterations.
Number of advice-messages emitted for this compilation session: 8.
END OF GAP REPORT LOG

box icc after guide pragmas
Elapsed time:           109.224131 (s)
Elapsed user CPU time:      108.257542 (s)
Elapsed system CPU time:    0.041993 (s)
=============================================

box (fused Collision kernal with if)
Reynolds number:                1.988092935285E+00
Elapsed time:                   21.461808 (s)
Elapsed user CPU time:          142.303366 (s)
Elapsed system CPU time:        13.860892 (s)

Total difference in av_vels : 9.627810213984E+02
Biggest difference (at step 7262) : 2.627524392310E-02
  2.686612074709E-03 vs. 2.896185599781E-02 = 9.8e+02%

Total difference in final_state : 1.139799683001E+00
Biggest difference (at coord (126,5)) : 1.067972103700E-03
  3.333333333333E-02 vs. 3.440130543703E-02 = 3.2%

final state failed check
av_vels failed check

box with write and read to buffers
Reynolds number:        -NAN
Elapsed time:           28.051968 (s)
Elapsed user CPU time:      133.119762 (s)
Elapsed system CPU time:    18.845135 (s)

=====================================

box with read and write around collision
Reynolds number:                2.039107350801E+01
Elapsed time:                   79.676783 (s)
Elapsed user CPU time:          342.392948 (s)
Elapsed system CPU time:        49.081538 (s)


Total difference in av_vels : 0.000000000000E+00
Biggest difference (at step 0) : 0.000000000000E+00
  1.334043366242E-05 vs. 1.334043366242E-05 = 0%

Total difference in final_state : 0.000000000000E+00
Biggest difference (at coord (0,0)) : 0.000000000000E+00
  3.333333333333E-02 vs. 3.333333333333E-02 = 0%

Both tests passed!

box with select
Elapsed time:                   80.623418 (s)
Elapsed user CPU time:          351.524560 (s)
Elapsed system CPU time:        49.373494 (s)

======================================

box with collision and prop kernels
Reynolds number:                2.039107350801E+01
Elapsed time:                   63.099975 (s)
Elapsed user CPU time:          415.435844 (s)
Elapsed system CPU time:        43.674360 (s)

box select in prop
Error: unimplemented function(s) used:
_Z6selectiil is undefined 
CompilerException Failed to parse IR

box with prop ternays arrange to favour true
Reynolds number:                2.039107350801E+01
Elapsed time:                   67.836366 (s)
Elapsed user CPU time:          57.836207 (s)
Elapsed system CPU time:        10.519400 (s)

==========================================

box with all TS kernals and outside write/read
serial op av_vel with pre read
Elapsed time:                   42.940412 (s)
Elapsed user CPU time:          364.484589 (s)
Elapsed system CPU time:        28.401682 (s)

Large_pipe with all TS Kernels
serial op av_vel with pre read
Reynolds number:                8.531247814429E+00
Elapsed time:                   319.444061 (s)
Elapsed user CPU time:          2191.857786 (s)
Elapsed system CPU time:        14.257832 (s)

====
Large_pipe with all TS Kernels
cpu speed ops
Reynolds number:                8.531247814429E+00
Elapsed time:                   321.504837 (s)
Elapsed user CPU time:          2257.649785 (s)
Elapsed system CPU time:        12.482102 (s)

(Diff ren, but passes test)

Large_pipe with all TS Kernels
cpu speed ops Native
Reynolds number:                8.531247814429E+00
Elapsed time:                   444.102814 (s)
Elapsed user CPU time:          357.925587 (s)
Elapsed system CPU time:        85.819953 (s)

Biggest difference (at step 0) : -1.800029716210E-17
  7.399426587077E-06 vs. 7.399426587059E-06 = -2.4e-10%

Total difference in final_state : 3.139974391608E-12
Biggest difference (at coord (222,764)) : 9.998946115530E-15
  3.297778781261E-02 vs. 3.297778781262E-02 = 3e-11%

Both tests passed!

(bigger diff ren, but passes test)

gpu speed ops
(not really faster, more accurate than cpu flags)

Reynolds number:                8.529600883297E+00
Elapsed time:                   318.270362 (s)
Elapsed user CPU time:          2182.119267 (s)
Elapsed system CPU time:        13.697917 (s)

Total difference in av_vels : 2.277021283960E-02
Biggest difference (at step 7999) : 6.862213049998E-06
  3.554000368040E-02 vs. 3.554686589345E-02 = 0.019%

Total difference in final_state : 5.648553181121E-01
Biggest difference (at coord (334,703)) : -3.312241369999E-06
  3.300496165948E-02 vs. 3.300164941811E-02 = -0.01%


gpu speed ops (relaxed Math)
